
                            < M A T L A B (R) >
                  Copyright 1984-2015 The MathWorks, Inc.
                   R2015a (8.5.0.197613) 64-bit (glnxa64)
                             February 12, 2015

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

	Academic License


img1 =

56.pgm.atts


img2 =

dummy


minGap =

    20


startTime =

12-Oct-2015 13:27:43

## Starting Data/56.pgm.atts

 486 longest primitives returned (233 lines, 253 arcs read, but returning only 3000 max elements for computational reasons)

 Time taken by traditional algorithm = 938.874761 (sec)
dimRedAlg =

PCA


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 1.711000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 5.469000 picoseconds
 Time taken by nanomagnet computing = 3.664640 (sec)
 Detection Rate 0.391258 at 0.087780 false alarm
dimRedAlg =

LDA


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.883000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 114.087000 picoseconds
 Time taken by nanomagnet computing = 1.653466 (sec)
 Detection Rate 0.395560 at 0.098386 false alarm
dimRedAlg =

MDS


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 1.711000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 5.469000 picoseconds
 Time taken by nanomagnet computing = 2.147930 (sec)
 Detection Rate 0.391258 at 0.087780 false alarm
dimRedAlg =

ProbPCA


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 49.381000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 26.271000 picoseconds
 Time taken by nanomagnet computing = 90.981729 (sec)
 Detection Rate 0.603071 at 0.096629 false alarm
dimRedAlg =

FactorAnalysis

 

 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 5.037000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 21.171000 picoseconds
 Time taken by nanomagnet computing = 135.167525 (sec)
 Detection Rate 0.493350 at 0.093116 false alarm
dimRedAlg =

Sammon


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 9.003000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 31.219000 picoseconds
 Time taken by nanomagnet computing = 181.745737 (sec)
 Detection Rate 0.967338 at 0.095198 false alarm
dimRedAlg =

Isomap

Constructing neighborhood graph...
Computing shortest paths...
Constructing low-dimensional embedding...

 Wanted to embed 481 magnets embedded 481 magnet
 #*#*# ERROR: Failed Execution. Alg: Isomap, File: Data/56.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LandmarkIsomap


 Wanted to embed 481 magnets embedded 481 magnet
 #*#*# ERROR: Failed Execution. Alg: LandmarkIsomap, File: Data/56.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LLE


 Wanted to embed 481 magnets embedded 481 magnet
 #*#*# ERROR: Failed Execution. Alg: LLE, File: Data/56.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

Laplacian


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.060000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 7.937000 picoseconds
 Time taken by nanomagnet computing = 0.477356 (sec)
 Detection Rate 0.353511 at 0.097931 false alarm
dimRedAlg =

HessianLLE


 #*#*# ERROR: Failed Execution. Alg: HessianLLE, File: Data/56.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:eigs:AminusBSingular'
       message: 'The shifted operator is singular. The shift is an eigenva...'
         cause: {0x1 cell}
         stack: [8x1 struct]


dimRedAlg =

LTSA

Find nearest neighbors...
Compute local information matrices for all datapoints...
Construct alignment matrix...
Perform eigenanalysis...

 #*#*# ERROR: Failed Execution. Alg: LTSA, File: Data/56.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:eigs:AminusBSingular'
       message: 'The shifted operator is singular. The shift is an eigenva...'
         cause: {0x1 cell}
         stack: [8x1 struct]


dimRedAlg =

DiffusionMaps


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 3.329000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 3.327000 picoseconds
 Time taken by nanomagnet computing = 1.538118 (sec)
 Detection Rate 0.475944 at 0.097605 false alarm
dimRedAlg =

KernelPCA


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 6.761000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 12.770000 picoseconds
 Time taken by nanomagnet computing = 5.762446 (sec)
 Detection Rate 0.825543 at 0.095523 false alarm
dimRedAlg =

SNE


 Wanted to embed 486 magnets embedded 486 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 13.607000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 6.237000 picoseconds
 Time taken by nanomagnet computing = 183.465810 (sec)
 Detection Rate 0.886270 at 0.098516 false alarm
dimRedAlg =

SymSNE

slurmstepd: *** JOB 1930704 CANCELLED AT 2015-10-12T15:58:06 DUE TO TIME LIMIT on wh-520-10-34 ***
