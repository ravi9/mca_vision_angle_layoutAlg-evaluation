
                            < M A T L A B (R) >
                  Copyright 1984-2015 The MathWorks, Inc.
                   R2015a (8.5.0.197613) 64-bit (glnxa64)
                             February 12, 2015

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

	Academic License


img1 =

S005I008.pgm.atts


img2 =

dummy


minGap =

    20


startTime =

12-Oct-2015 13:30:19

## Starting Data/S005I008.pgm.atts

 384 longest primitives returned (217 lines, 167 arcs read, but returning only 3000 max elements for computational reasons)

 Time taken by traditional algorithm = 1687.069954 (sec)
dimRedAlg =

PCA


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 5.306000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 10.008000 picoseconds
 Time taken by nanomagnet computing = 11.619243 (sec)
 Detection Rate 0.364519 at 0.099524 false alarm
dimRedAlg =

LDA


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 3.174000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 5.531000 picoseconds
 Time taken by nanomagnet computing = 2.850612 (sec)
 Detection Rate 0.155724 at 0.071855 false alarm
dimRedAlg =

MDS


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 5.306000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 10.008000 picoseconds
 Time taken by nanomagnet computing = 4.089482 (sec)
 Detection Rate 0.364519 at 0.099524 false alarm
dimRedAlg =

ProbPCA


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 1.923000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 13.818000 picoseconds
 Time taken by nanomagnet computing = 265.741171 (sec)
 Detection Rate 0.693252 at 0.098141 false alarm
dimRedAlg =

FactorAnalysis

 

 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 10.106000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 42.202000 picoseconds
 Time taken by nanomagnet computing = 427.790527 (sec)
 Detection Rate 0.473995 at 0.099784 false alarm
dimRedAlg =

Sammon


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 4.049000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 12.051000 picoseconds
 Time taken by nanomagnet computing = 263.799662 (sec)
 Detection Rate 0.832752 at 0.079032 false alarm
dimRedAlg =

Isomap

Constructing neighborhood graph...
Computing shortest paths...
Constructing low-dimensional embedding...

 Wanted to embed 381 magnets embedded 381 magnet
 #*#*# ERROR: Failed Execution. Alg: Isomap, File: Data/S005I008.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LandmarkIsomap


 Wanted to embed 381 magnets embedded 381 magnet
 #*#*# ERROR: Failed Execution. Alg: LandmarkIsomap, File: Data/S005I008.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LLE


 Wanted to embed 381 magnets embedded 381 magnet
 #*#*# ERROR: Failed Execution. Alg: LLE, File: Data/S005I008.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

Laplacian


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 8.477000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 1.703000 picoseconds
 Time taken by nanomagnet computing = 1.651241 (sec)
 Detection Rate 0.105383 at 0.097795 false alarm
dimRedAlg =

HessianLLE


 #*#*# ERROR: Failed Execution. Alg: HessianLLE, File: Data/S005I008.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:eigs:AminusBSingular'
       message: 'The shifted operator is singular. The shift is an eigenva...'
         cause: {0x1 cell}
         stack: [8x1 struct]


dimRedAlg =

LTSA

Find nearest neighbors...
Compute local information matrices for all datapoints...
Construct alignment matrix...
Perform eigenanalysis...

 #*#*# ERROR: Failed Execution. Alg: LTSA, File: Data/S005I008.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:eigs:AminusBSingular'
       message: 'The shifted operator is singular. The shift is an eigenva...'
         cause: {0x1 cell}
         stack: [8x1 struct]


dimRedAlg =

DiffusionMaps


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 1.205000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 3.308000 picoseconds
 Time taken by nanomagnet computing = 7.301036 (sec)
 Detection Rate 0.421531 at 0.094163 false alarm
dimRedAlg =

KernelPCA


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 9.234000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 6.975000 picoseconds
 Time taken by nanomagnet computing = 13.799647 (sec)
 Detection Rate 0.246854 at 0.099092 false alarm
dimRedAlg =

SNE


 Wanted to embed 384 magnets embedded 384 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 3.985000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 12.941000 picoseconds
 Time taken by nanomagnet computing = 353.017134 (sec)
 Detection Rate 0.510235 at 0.097017 false alarm
dimRedAlg =

SymSNE

slurmstepd: *** JOB 1930723 CANCELLED AT 2015-10-12T16:00:36 DUE TO TIME LIMIT on wh-520-10-20 ***
