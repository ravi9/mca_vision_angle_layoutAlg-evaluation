
                            < M A T L A B (R) >
                  Copyright 1984-2015 The MathWorks, Inc.
                   R2015a (8.5.0.197613) 64-bit (glnxa64)
                             February 12, 2015

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

	Academic License


img1 =

105.pgm.atts


img2 =

dummy


minGap =

    20


startTime =

12-Oct-2015 13:26:11

## Starting Data/105.pgm.atts

 544 longest primitives returned (247 lines, 297 arcs read, but returning only 3000 max elements for computational reasons)

 Time taken by traditional algorithm = 1271.894758 (sec)
dimRedAlg =

PCA


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 3.843000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 3.541000 picoseconds
 Time taken by nanomagnet computing = 7.040887 (sec)
 Detection Rate 0.303081 at 0.096445 false alarm
dimRedAlg =

LDA


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 28.869000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 4.961000 picoseconds
 Time taken by nanomagnet computing = 3.745131 (sec)
 Detection Rate 0.303497 at 0.099180 false alarm
dimRedAlg =

MDS


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 3.843000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 3.541000 picoseconds
 Time taken by nanomagnet computing = 5.902326 (sec)
 Detection Rate 0.303081 at 0.096445 false alarm
dimRedAlg =

ProbPCA


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.788000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 15.474000 picoseconds
 Time taken by nanomagnet computing = 129.459803 (sec)
 Detection Rate 0.566944 at 0.097812 false alarm
dimRedAlg =

FactorAnalysis

 

 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 8.417000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 3.832000 picoseconds
 Time taken by nanomagnet computing = 227.204638 (sec)
 Detection Rate 0.263530 at 0.098838 false alarm
dimRedAlg =

Sammon


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 9.592000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 6.815000 picoseconds
 Time taken by nanomagnet computing = 233.060978 (sec)
 Detection Rate 0.295337 at 0.088869 false alarm
dimRedAlg =

Isomap

Constructing neighborhood graph...
Computing shortest paths...
Constructing low-dimensional embedding...

 Wanted to embed 541 magnets embedded 541 magnet
 #*#*# ERROR: Failed Execution. Alg: Isomap, File: Data/105.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LandmarkIsomap


 Wanted to embed 541 magnets embedded 541 magnet
 #*#*# ERROR: Failed Execution. Alg: LandmarkIsomap, File: Data/105.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LLE


 Wanted to embed 541 magnets embedded 541 magnet
 #*#*# ERROR: Failed Execution. Alg: LLE, File: Data/105.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

Laplacian


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.896000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 25.746000 picoseconds
 Time taken by nanomagnet computing = 0.582928 (sec)
 Detection Rate 0.460949 at 0.093312 false alarm
dimRedAlg =

HessianLLE


 #*#*# ERROR: Failed Execution. Alg: HessianLLE, File: Data/105.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:eigs:AminusBSingular'
       message: 'The shifted operator is singular. The shift is an eigenva...'
         cause: {0x1 cell}
         stack: [8x1 struct]


dimRedAlg =

LTSA

Find nearest neighbors...
Compute local information matrices for all datapoints...
Construct alignment matrix...
Perform eigenanalysis...

 #*#*# ERROR: Failed Execution. Alg: LTSA, File: Data/105.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:eigs:AminusBSingular'
       message: 'The shifted operator is singular. The shift is an eigenva...'
         cause: {0x1 cell}
         stack: [8x1 struct]


dimRedAlg =

DiffusionMaps


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 7.332000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 7.325000 picoseconds
 Time taken by nanomagnet computing = 4.146245 (sec)
 Detection Rate 0.351207 at 0.098724 false alarm
dimRedAlg =

KernelPCA


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 5.616000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 4.603000 picoseconds
 Time taken by nanomagnet computing = 11.044403 (sec)
 Detection Rate 0.732556 at 0.090122 false alarm
dimRedAlg =

SNE


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 4.477000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 7.746000 picoseconds
 Time taken by nanomagnet computing = 302.281270 (sec)
 Detection Rate 0.639800 at 0.099009 false alarm
dimRedAlg =

SymSNE


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.445000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 2.712000 picoseconds
 Time taken by nanomagnet computing = 254.638038 (sec)
 Detection Rate 0.428310 at 0.147146 false alarm
dimRedAlg =

tSNE

Computed P-values 500 of 544 datapoints...
Mean value of sigma: 0.44968
Minimum value of sigma: 0.15759
Maximum value of sigma: 2.7486

 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 6.391000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 4.161000 picoseconds
 Time taken by nanomagnet computing = 100.597107 (sec)
 Detection Rate 0.346128 at 0.068019 false alarm
dimRedAlg =

NPE


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 6.811000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 2.479000 picoseconds
 Time taken by nanomagnet computing = 6.617518 (sec)
 Detection Rate 0.602331 at 0.094167 false alarm
dimRedAlg =

LPP


 Wanted to embed 544 magnets embedded 544 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.slurmstepd: *** JOB 1930690 CANCELLED AT 2015-10-12T15:56:06 DUE TO TIME LIMIT on wh-520-10-37 ***
