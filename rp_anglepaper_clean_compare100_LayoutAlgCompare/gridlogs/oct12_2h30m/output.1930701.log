
                            < M A T L A B (R) >
                  Copyright 1984-2015 The MathWorks, Inc.
                   R2015a (8.5.0.197613) 64-bit (glnxa64)
                             February 12, 2015

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

	Academic License


img1 =

217095.pgm.atts


img2 =

dummy


minGap =

    20


startTime =

12-Oct-2015 13:27:12

## Starting Data/217095.pgm.atts

 707 longest primitives returned (276 lines, 431 arcs read, but returning only 3000 max elements for computational reasons)

 Time taken by traditional algorithm = 1442.864539 (sec)
dimRedAlg =

PCA


 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.480000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 6.661000 picoseconds
 Time taken by nanomagnet computing = 4.849717 (sec)
 Detection Rate 0.430111 at 0.098551 false alarm
dimRedAlg =

LDA


 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 6.458000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 10.263000 picoseconds
 Time taken by nanomagnet computing = 7.065218 (sec)
 Detection Rate 0.325050 at 0.061353 false alarm
dimRedAlg =

MDS


 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.480000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 6.661000 picoseconds
 Time taken by nanomagnet computing = 2.555184 (sec)
 Detection Rate 0.430111 at 0.098551 false alarm
dimRedAlg =

ProbPCA


 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 20.097000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 24.195000 picoseconds
 Time taken by nanomagnet computing = 149.505166 (sec)
 Detection Rate 0.512242 at 0.081366 false alarm
dimRedAlg =

FactorAnalysis

 

 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 2.722000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 3.912000 picoseconds
 Time taken by nanomagnet computing = 246.523313 (sec)
 Detection Rate 0.507583 at 0.091166 false alarm
dimRedAlg =

Sammon


 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.
 Time Taken = 13.968000 picoseconds
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along y.
 Time Taken = 39.662000 picoseconds
 Time taken by nanomagnet computing = 270.651969 (sec)
 Detection Rate 0.529508 at 0.095997 false alarm
dimRedAlg =

Isomap

Constructing neighborhood graph...
Computing shortest paths...
Constructing low-dimensional embedding...

 Wanted to embed 698 magnets embedded 698 magnet
 #*#*# ERROR: Failed Execution. Alg: Isomap, File: Data/217095.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LandmarkIsomap


 Wanted to embed 698 magnets embedded 698 magnet
 #*#*# ERROR: Failed Execution. Alg: LandmarkIsomap, File: Data/217095.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

LLE


 Wanted to embed 698 magnets embedded 698 magnet
 #*#*# ERROR: Failed Execution. Alg: LLE, File: Data/217095.pgm.atts

magnetVisionException = 

  MException with properties:

    identifier: 'MATLAB:badsubscript'
       message: 'Index exceeds matrix dimensions.'
         cause: {}
         stack: [3x1 struct]


dimRedAlg =

Laplacian


 Wanted to embed 707 magnets embedded 707 magnet
 Writing coordinates of magnets in text file Coords.txt
 Image mask in VisionDots.bmp
 Relaxing nanodisk array with pi/4 orientation as initial states for all disks and external field along x.slurmstepd: *** JOB 1930701 CANCELLED AT 2015-10-12T15:57:36 DUE TO TIME LIMIT on wh-520-10-34 ***
